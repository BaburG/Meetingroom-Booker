

services:
  webserver:
    build:
      context: .
    # ports:
    #   - 8000:8000
    command: gunicorn bookersite.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/code
      - static:/app/static
    depends_on:
      - db
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
  
  nginx:
    build: ./nginx
    volumes: 
      - static:/static
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /tmp/acme-challenge:/tmp/acme-challenge
    ports:
      - 80:80
      - 443:443
    depends_on:
      - webserver

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust

  letsencrypt:
    container_name: "certbot"
    image: certbot/certbot
    command: sh -c "certbot certonly --webroot -w /tmp/acme-challenge/ -d mrb.westeurope.cloudapp.azure.com --text --agree-tos --email babur.g@hotmail.com --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges=http"
    entrypoint: ""
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/tmp/acme-challenge:/tmp/acme-challenge"
    environment:
      - TERM=xterm

volumes:
  postgres_data:
  static:


